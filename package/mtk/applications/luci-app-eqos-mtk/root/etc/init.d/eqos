#!/bin/sh /etc/rc.common
# Copyright (C) 2006 OpenWrt.org

START=50
USE_PROCD=1

parse_device() {
	local cfg="$1"

	local enabled
	config_get_bool enabled "$cfg" "enabled" "1"
	[ "$enabled" -eq "1" ] || return 1
	

	local ip download upload comment mac interfacename
	config_get ip "$cfg" ip
	config_get download "$cfg" "download"
	config_get upload "$cfg" "upload"
	config_get comment "$cfg" "comment"
	config_get mac "$cfg" "mac"
	config_get interfacename "$cfg" "interfacename"
	eqos add "$ip" "$download" "$upload" "$comment" "$mac" "$interfacename"
}

start_service() {
	config_load "eqos"

	local enabled
	config_get_bool enabled "config" "enabled" "0"
	[ "$enabled" -eq "1" ] || return 1
	
	local download upload comment
	config_get download "config" "download"
	config_get upload "config" "upload"
	config_get comment "config" "comment"
	config_get smarthqos "config" "smarthqos"
	config_get interface "config" "interface"
	eqos start "$download" "$upload" "$comment" 
	
	local ipv6enabled                              
        config_get_bool ipv6enabled "config" "ipv6enabled" "0"    
        ip6tables -t mangle -N eqos
        ip6tables -t mangle -F eqos
        ebtables -t nat  -N eqos
        ebtables -t nat  -F eqos
        if [ "$ipv6enabled" -eq "1" ]; then                                
        ebtables -t nat -D POSTROUTING  -j eqos -p ipv6              
        ebtables -t nat -A POSTROUTING  -j eqos -p ipv6
        ip6tables -t mangle -D FORWARD  -j eqos
        ip6tables -t mangle -A FORWARD  -j eqos             
        fi  
        
        if [ "$smarthqos" -eq "1" ]; then   
        for i in $(seq 1 31); do
        	if [ "$upload" -ne "0" ]; then
		echo 2 1 $(($upload*225)) 1 $(($upload*1000)) 4 1 > /sys/kernel/debug/hnat/qdma_txq$i
		fi
		done
		for i in $(seq 33 63); do
		if [ "$download" -ne "0" ]; then
		echo 3 1 $(($download*200)) 1 $(($download*1000)) 4 1 > /sys/kernel/debug/hnat/qdma_txq$i
		fi
		done
	echo 2 1 $(($upload*100)) 1 $(($upload*1000)) 4 1 > /sys/kernel/debug/hnat/qdma_txq30
	echo 3 1 $(($download*150)) 1 $(($download*1000)) 4 1 > /sys/kernel/debug/hnat/qdma_txq62
	echo 2 1 $(($upload*100)) 1 $(($upload*1000)) 4 1 > /sys/kernel/debug/hnat/qdma_txq27
	echo 3 1 $(($download*150)) 1 $(($download*1000)) 4 1 > /sys/kernel/debug/hnat/qdma_txq59
	
	
	iptables -t mangle -A eqos -i br-lan  -p tcp  -j DSCP --set-dscp 31
	iptables -t mangle -A eqos -o br-lan  -p tcp  -j DSCP --set-dscp 63  
	iptables -t mangle -A eqos -i br-lan  -p udp  -j DSCP --set-dscp 30
	iptables -t mangle -A eqos -o br-lan  -p udp  -j DSCP --set-dscp 62
	iptables -t mangle -A eqos -i br-lan  -p tcp --dport 80  -j DSCP --set-dscp 29
	iptables -t mangle -A eqos -o br-lan  -p tcp --dport 80  -j DSCP --set-dscp 61
	iptables -t mangle -A eqos -o br-lan  -p tcp --dport 443  -j DSCP --set-dscp 29
	iptables -t mangle -A eqos -o br-lan  -p tcp --dport 443  -j DSCP --set-dscp 61
	iptables -t mangle -A eqos -i br-lan  -p tcp --dport 8080  -j DSCP --set-dscp 29
	iptables -t mangle -A eqos -o br-lan  -p tcp --dport 8080 -j DSCP --set-dscp 61
	iptables -t mangle -A eqos -i br-lan  -p tcp --dport 8081  -j DSCP --set-dscp 29
	iptables -t mangle -A eqos -o br-lan  -p tcp --dport 8081 -j DSCP --set-dscp 61
	iptables -t mangle -A eqos -i br-lan  -m length --length :256 -j DSCP --set-dscp 28
	iptables -t mangle -A eqos -o br-lan  -m length --length :256 -j DSCP --set-dscp 60
	iptables -t mangle -A eqos -i br-lan -p udp  -m hashlimit --hashlimit-mode srcip,srcport --hashlimit-name udpout --hashlimit-above 5/sec --hashlimit-burst 5 --hashlimit-htable-expire 10000 --hashlimit-htable-gcinterval 10000 -j DSCP --set-dscp 27
	iptables -t mangle -A eqos -o br-lan -p udp  -m hashlimit --hashlimit-mode dstip,dstport --hashlimit-name udpin --hashlimit-above 5/sec --hashlimit-burst 5 --hashlimit-htable-expire 10000 --hashlimit-htable-gcinterval 10000 -j DSCP --set-dscp 59

	ip6tables -t mangle -A eqos -i br-lan -j MARK --set-mark 31
	ip6tables -t mangle -A eqos -o br-lan -j MARK --set-mark 63 
	ip6tables -t mangle -A eqos -p udp -i br-lan -j MARK --set-mark 30
	ip6tables -t mangle -A eqos -p udp -o br-lan -j MARK --set-mark 62 
	ip6tables -t mangle -A eqos -i br-lan -p tcp --dport 80  -j MARK --set-mark 29
	ip6tables -t mangle -A eqos -o br-lan -p tcp  --dport 80  -j MARK --set-mark 61
	ip6tables -t mangle -A eqos -i br-lan -p tcp --dport 443  -j MARK --set-mark 29
	ip6tables -t mangle -A eqos -o br-lan -p tcp --dport 443  -j MARK --set-mark 61
	ip6tables -t mangle -A eqos -i br-lan -p tcp --dport 8080  -j MARK --set-mark 29
	ip6tables -t mangle -A eqos -o br-lan -p tcp --dport 8080 -j MARK --set-mark 61
	ip6tables -t mangle -A eqos -i br-lan -p tcp --dport 8081  -j MARK --set-mark 29
	ip6tables -t mangle -A eqos -o br-lan -p tcp --dport 8081 -j MARK --set-mark 61
	ip6tables -t mangle -A eqos -i br-lan -m length --length :256 -j MARK --set-mark 28
	ip6tables -t mangle -A eqos -o br-lan -m length --length :256 -j MARK --set-mark 60
	ip6tables -t mangle -A eqos -i br-lan -p udp  -m hashlimit --hashlimit-mode srcip,srcport --hashlimit-name udp6out --hashlimit-above 5/sec --hashlimit-burst 5 --hashlimit-htable-expire 10000 --hashlimit-htable-gcinterval 10000 -j MARK --set-mark 27
	ip6tables -t mangle -A eqos -o br-lan -p udp  -m hashlimit --hashlimit-mode dstip,dstport --hashlimit-name udp6in --hashlimit-above 5/sec --hashlimit-burst 5 --hashlimit-htable-expire 10000 --hashlimit-htable-gcinterval 10000 -j MARK --set-mark 59
        fi 
        iptables -t mangle -F PREROUTING
        if [ $interface ]; then
	bash /usr/sbin/loadbalance "$interface"
        fi
        
        config_foreach parse_device "device"
        
}

stop_service() {
	eqos stop
	iptables -t mangle -F PREROUTING
}

reload_service() {
	stop
	start
}

service_triggers() {
	procd_add_reload_trigger "eqos"
}
